{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport MenuRetornar from \"../../components/menuretornar\";\nimport CardRoute from \"./cardRoute/cardRoute\";\nimport routeWeekly from \"../../assets/routes/output_weekly.json\";\nimport routeAll from \"../../assets/routes/output_all.json\";\nimport { useEffect, useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RoutesNoMap(_ref) {\n  var route = _ref.route;\n  var routeData = route.params.routeData;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    routeList = _useState2[0],\n    setRouteList = _useState2[1];\n  var chooseRouteType = function chooseRouteType(routeType) {\n    if (routeType === \"PF - Semanal / Quinzenal\") {\n      return routeAll;\n    } else {\n      return routeWeekly;\n    }\n  };\n  useEffect(function () {\n    var chosenJSON = chooseRouteType(routeData.routeType);\n    var chosenVehicle = chosenJSON[routeData.vehicle];\n    var chosenDay = chosenVehicle[routeData.day];\n    setRouteList(chosenDay[\"Route\"]);\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(MenuRetornar, {\n      options: [{\n        title: 'Rotas de Coleta',\n        voltar: 'RotasColeta'\n      }]\n    }), _jsxs(Text, {\n      style: styles.Title,\n      children: [\"Tipo de Rota: \", routeData.routeType]\n    }), _jsxs(Text, {\n      style: styles.Title,\n      children: [\"Tipo de Ve\\xEDculo: \", routeData.vehicle, \" \"]\n    }), _jsxs(Text, {\n      style: styles.Title,\n      children: [\"Dia da Semana: \", routeData.day]\n    }), _jsx(ScrollView, {\n      children: routeList.map(function (eachRoute, index) {\n        return _jsx(CardRoute, {\n          eachRoute: eachRoute,\n          isLast: index === routeList.length - 1\n        }, index);\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#D9D9D9',\n    height: '100%',\n    display: 'flex',\n    justifyContent: \"center\"\n  },\n  Title: {\n    fontSize: 17,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginTop: 5\n  }\n});","map":{"version":3,"names":["MenuRetornar","CardRoute","routeWeekly","routeAll","useEffect","useState","jsx","_jsx","jsxs","_jsxs","RoutesNoMap","_ref","route","routeData","params","_useState","_useState2","_slicedToArray","routeList","setRouteList","chooseRouteType","routeType","chosenJSON","chosenVehicle","vehicle","chosenDay","day","View","style","styles","container","children","options","title","voltar","Text","Title","ScrollView","map","eachRoute","index","isLast","length","StyleSheet","create","backgroundColor","height","display","justifyContent","fontSize","fontWeight","textAlign","marginTop"],"sources":["C:/Users/victo/Desktop/rotas-tcc/screens/routeNoMap/routeNoMap.js"],"sourcesContent":["import { View, StyleSheet, ScrollView, Text } from \"react-native\";\r\nimport MenuRetornar from \"../../components/menuretornar\";\r\nimport CardRoute from \"./cardRoute/cardRoute\";\r\n\r\nimport routeWeekly from \"../../assets/routes/output_weekly.json\"\r\nimport routeAll from \"../../assets/routes/output_all.json\"\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function RoutesNoMap({ route }) {\r\n    const routeData = route.params.routeData\r\n    const [routeList, setRouteList] = useState([])\r\n\r\n    const chooseRouteType = (routeType) => {\r\n        if (routeType === \"PF - Semanal / Quinzenal\"){\r\n            return routeAll\r\n        }\r\n        else{\r\n            return routeWeekly\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const chosenJSON = chooseRouteType(routeData.routeType)\r\n        const chosenVehicle = chosenJSON[routeData.vehicle]\r\n        const chosenDay = chosenVehicle[routeData.day]\r\n        setRouteList(chosenDay[\"Route\"])\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <MenuRetornar options={[{ title: 'Rotas de Coleta', voltar: 'RotasColeta' }]} />\r\n            \r\n            <Text style={styles.Title}>Tipo de Rota: {routeData.routeType}</Text>\r\n            <Text style={styles.Title}>Tipo de Ve√≠culo: {routeData.vehicle} </Text>\r\n            <Text style={styles.Title}>Dia da Semana: {routeData.day}</Text>\r\n\r\n            <ScrollView>\r\n                {\r\n                    routeList.map((eachRoute, index) => {\r\n                        return <CardRoute key={index} eachRoute={eachRoute} isLast={index === routeList.length - 1}/>\r\n                    })\r\n                }\r\n            </ScrollView>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    container: {\r\n        backgroundColor: '#D9D9D9',\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: \"center\" \r\n    },\r\n    Title: {\r\n        fontSize: 17,\r\n        fontWeight: \"bold\",\r\n        textAlign: \"center\",\r\n        marginTop: 5\r\n    }\r\n});"],"mappings":";;;;;AACA,OAAOA,YAAY;AACnB,OAAOC,SAAS;AAEhB,OAAOC,WAAW;AAClB,OAAOC,QAAQ;AAEf,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5C,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAAY;EAAA,IAATC,KAAK,GAAAD,IAAA,CAALC,KAAK;EACvC,IAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAACD,SAAS;EACxC,IAAAE,SAAA,GAAkCV,QAAQ,CAAC,EAAE,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAE9B,IAAMI,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,SAAS,EAAK;IACnC,IAAIA,SAAS,KAAK,0BAA0B,EAAC;MACzC,OAAOlB,QAAQ;IACnB,CAAC,MACG;MACA,OAAOD,WAAW;IACtB;EACJ,CAAC;EAEDE,SAAS,CAAC,YAAM;IACZ,IAAMkB,UAAU,GAAGF,eAAe,CAACP,SAAS,CAACQ,SAAS,CAAC;IACvD,IAAME,aAAa,GAAGD,UAAU,CAACT,SAAS,CAACW,OAAO,CAAC;IACnD,IAAMC,SAAS,GAAGF,aAAa,CAACV,SAAS,CAACa,GAAG,CAAC;IAC9CP,YAAY,CAACM,SAAS,CAAC,OAAO,CAAC,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAGN,OACIhB,KAAA,CAACkB,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC1BxB,IAAA,CAACP,YAAY;MAACgC,OAAO,EAAE,CAAC;QAAEC,KAAK,EAAE,iBAAiB;QAAEC,MAAM,EAAE;MAAc,CAAC;IAAE,CAAE,CAAC,EAEhFzB,KAAA,CAAC0B,IAAI;MAACP,KAAK,EAAEC,MAAM,CAACO,KAAM;MAAAL,QAAA,GAAC,gBAAc,EAAClB,SAAS,CAACQ,SAAS;IAAA,CAAO,CAAC,EACrEZ,KAAA,CAAC0B,IAAI;MAACP,KAAK,EAAEC,MAAM,CAACO,KAAM;MAAAL,QAAA,GAAC,sBAAiB,EAAClB,SAAS,CAACW,OAAO,EAAC,GAAC;IAAA,CAAM,CAAC,EACvEf,KAAA,CAAC0B,IAAI;MAACP,KAAK,EAAEC,MAAM,CAACO,KAAM;MAAAL,QAAA,GAAC,iBAAe,EAAClB,SAAS,CAACa,GAAG;IAAA,CAAO,CAAC,EAEhEnB,IAAA,CAAC8B,UAAU;MAAAN,QAAA,EAEHb,SAAS,CAACoB,GAAG,CAAC,UAACC,SAAS,EAAEC,KAAK,EAAK;QAChC,OAAOjC,IAAA,CAACN,SAAS;UAAasC,SAAS,EAAEA,SAAU;UAACE,MAAM,EAAED,KAAK,KAAKtB,SAAS,CAACwB,MAAM,GAAG;QAAE,GAApEF,KAAqE,CAAC;MACjG,CAAC;IAAC,CAEE,CAAC;EAAA,CACX,CAAC;AAEf;AAEA,IAAMX,MAAM,GAAGc,UAAU,CAACC,MAAM,CAAC;EAE7Bd,SAAS,EAAE;IACPe,eAAe,EAAE,SAAS;IAC1BC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE;EACpB,CAAC;EACDZ,KAAK,EAAE;IACHa,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE,QAAQ;IACnBC,SAAS,EAAE;EACf;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}