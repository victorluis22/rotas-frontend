{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport moment from 'moment';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function HorarioInput(_ref) {\n  var options = _ref.options,\n    onChangeSelect = _ref.onChangeSelect,\n    text = _ref.text;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    horario = _useState2[0],\n    setHorario = _useState2[1];\n  var handleHorarioChange = function handleHorarioChange(text) {\n    var formattedText = text;\n    formattedText = formattedText.replace(/[^\\d]/g, '');\n    if (formattedText.length > 2) {\n      formattedText = formattedText.replace(/(\\d{2})/, '$1:');\n    }\n    if (formattedText.startsWith(':')) {\n      formattedText = formattedText.slice(1);\n    }\n    if (formattedText.length > 4) {\n      formattedText = formattedText.slice(0, 5);\n    }\n    setHorario(formattedText);\n  };\n  var validarHorario = function validarHorario() {\n    var formatoHorario = 'HH:mm';\n    var horarioValido = moment(horario, formatoHorario, true).isValid();\n    if (horarioValido) {\n      console.log('Horário válido:', horario);\n    } else {\n      console.log('Horário inválido:', horario);\n    }\n  };\n  return _jsx(View, {\n    children: _jsx(TextInput, {\n      placeholder: \"00:00\",\n      value: horario,\n      onChangeText: handleHorarioChange,\n      keyboardType: \"numeric\",\n      style: styles.caixadetexto\n    })\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#D9D9D9',\n    height: '100%',\n    display: 'flex'\n  },\n  containerdentro: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: 10,\n    paddingTop: 5\n  },\n  modal: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 25\n  },\n  caixadetexto: {\n    backgroundColor: 'white',\n    borderRadius: 20,\n    height: 30,\n    width: '100%',\n    justifyContent: 'space-between',\n    marginTop: 10,\n    paddingHorizontal: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingLeft: 15\n  }\n});","map":{"version":3,"names":["React","useState","View","TextInput","Button","StyleSheet","moment","jsx","_jsx","HorarioInput","_ref","options","onChangeSelect","text","_useState","_useState2","_slicedToArray","horario","setHorario","handleHorarioChange","formattedText","replace","length","startsWith","slice","validarHorario","formatoHorario","horarioValido","isValid","console","log","children","placeholder","value","onChangeText","keyboardType","style","styles","caixadetexto","create","container","backgroundColor","height","display","containerdentro","flexDirection","alignItems","justifyContent","paddingHorizontal","paddingTop","modal","flex","marginTop","borderRadius","width","paddingLeft"],"sources":["C:/Users/victo/Desktop/rotas-tcc/components/moment.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, Button, StyleSheet } from 'react-native';\r\nimport moment from 'moment';\r\n\r\nexport default function HorarioInput({ options, onChangeSelect, text }) {\r\n\r\n\r\n    const [horario, setHorario] = useState('');\r\n\r\n    const handleHorarioChange = (text) => {\r\n        let formattedText = text;\r\n\r\n        // Remover todos os caracteres não numéricos\r\n        formattedText = formattedText.replace(/[^\\d]/g, '');\r\n\r\n        // Adicionar \":\" após dois caracteres\r\n        if (formattedText.length > 2) {\r\n            formattedText = formattedText.replace(/(\\d{2})/, '$1:');\r\n        }\r\n\r\n        // Verificar se o texto começa com \":\" para permitir a exclusão\r\n        if (formattedText.startsWith(':')) {\r\n            formattedText = formattedText.slice(1);\r\n        }\r\n\r\n        if (formattedText.length > 4) {\r\n            formattedText = formattedText.slice(0, 5);\r\n        }\r\n\r\n        setHorario(formattedText);\r\n    };\r\n\r\n    const validarHorario = () => {\r\n        const formatoHorario = 'HH:mm';\r\n        const horarioValido = moment(horario, formatoHorario, true).isValid();\r\n\r\n        if (horarioValido) {\r\n            console.log('Horário válido:', horario);\r\n            // Faça algo com o horário válido, como enviá-lo para um servidor ou atualizar o estado do componente pai\r\n        } else {\r\n            console.log('Horário inválido:', horario);\r\n            // Exiba uma mensagem de erro ou faça algo para lidar com o horário inválido\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <View>\r\n            <TextInput\r\n                placeholder=\"00:00\"\r\n                value={horario}\r\n                onChangeText={handleHorarioChange}\r\n                keyboardType=\"numeric\"\r\n                style={styles.caixadetexto}\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: '#D9D9D9',\r\n        height: '100%',\r\n        display: 'flex',\r\n    },\r\n    containerdentro: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingHorizontal: 10,\r\n        paddingTop: 5\r\n    },\r\n    modal: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 25\r\n    },\r\n    caixadetexto: {\r\n        backgroundColor: 'white',\r\n        borderRadius: 20,\r\n        height: 30,\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n        marginTop: 10,\r\n        paddingHorizontal: 20,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        paddingLeft:15,\r\n\r\n    },\r\n\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}