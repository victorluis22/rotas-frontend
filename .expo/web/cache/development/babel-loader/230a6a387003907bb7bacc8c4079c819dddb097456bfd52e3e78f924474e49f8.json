{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport MenuRetornar from \"../../components/menuretornar\";\nimport { useState, useEffect } from \"react\";\nimport { get } from \"../../services/api\";\nimport { create, update } from \"../../services/api\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Picker } from '@react-native-picker/picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CadastroRespVeiculo(_ref) {\n  var route = _ref.route;\n  var previousData = route.params.previousData;\n  var codVeic = route.params.codVeic;\n  var type = route.params.type;\n  var _useState = useState(type === \"update\" ? previousData.CodResp : \"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    resp = _useState2[0],\n    setResp = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    respData = _useState4[0],\n    setRespData = _useState4[1];\n  var navigation = useNavigation();\n  var fetchResp = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var response = yield get(\"responsaveis\");\n      setRespData(response.data);\n    });\n    return function fetchResp() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchResp();\n  }, []);\n  var submit = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      if (resp) {\n        var data = {\n          codResp: resp,\n          codVeic: codVeic\n        };\n        try {\n          if (type === \"update\") {\n            yield update(\"responsavelVeiculo\", previousData.CodRV, data);\n            Alert.alert(\"Sucesso\", \"Responsável atualizado com sucesso!\");\n            navigation.navigate(\"ListaRespVeiculo\", {\n              table: \"responsavelVeiculo\",\n              codVeic: codVeic\n            });\n          } else {\n            yield create(\"responsavelVeiculo\", data);\n            Alert.alert(\"Sucesso\", \"Responsável cadastrado com sucesso!\");\n            navigation.navigate(\"ListaRespVeiculo\", {\n              table: \"responsavelVeiculo\",\n              codVeic: codVeic\n            });\n          }\n        } catch (error) {\n          console.log(error);\n          var status = error.response ? error.response.status : 500;\n          if (status === 402) {\n            Alert.alert(\"Erro\", \"Responsável já cadastrado\");\n          } else if (status == 404) {\n            Alert.alert(\"Erro\", \"Responsável não encontrado\");\n          } else {\n            Alert.alert(\"Erro\", \"Ocorreu um erro ao enviar os dados, tente novamente.\");\n          }\n        }\n      } else {\n        Alert.alert(\"Erro\", \"Preencha todos os campos de texto.\");\n      }\n    });\n    return function submit() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(MenuRetornar, {\n      options: [{\n        title: type === \"update\" ? `Editar ${previousData.Nome}` : \"Cadastro de Responsável de Veículo\",\n        voltar: \"ListaResponsavelVeiculo\",\n        table: \"responsavelVeiculo\",\n        codVeic: codVeic\n      }]\n    }), _jsxs(ScrollView, {\n      style: styles.content,\n      children: [_jsx(Text, {\n        style: styles.titleinput,\n        children: \"Respons\\xE1vel\"\n      }), _jsxs(Picker, {\n        style: styles.input,\n        selectedValue: resp,\n        onValueChange: function onValueChange(itemValue) {\n          return setResp(itemValue);\n        },\n        children: [_jsx(Picker.Item, {\n          label: \"Selecione\",\n          value: \"\",\n          enabled: false\n        }), respData.map(function (item, index) {\n          return _jsx(Picker.Item, {\n            label: `${item.Nome}`,\n            value: item.CodResp\n          }, index);\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonContent,\n        onPress: function onPress() {\n          return submit();\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: type === \"update\" ? \"Atualizar\" : 'Cadastrar'\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#D9D9D9',\n    height: '100%',\n    display: 'flex',\n    justifyContent: \"center\"\n  },\n  content: {\n    marginTop: 20\n  },\n  input: {\n    backgroundColor: 'white',\n    borderRadius: 20,\n    width: '80%',\n    height: 35,\n    alignSelf: 'center',\n    margin: 10,\n    paddingLeft: 15,\n    elevation: 5,\n    shadowColor: '#3C3C3C'\n  },\n  titleinput: {\n    display: \"flex\",\n    marginLeft: 40,\n    color: \"#3C3C3C\",\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  buttonText: {\n    margin: 10,\n    fontSize: 20,\n    color: \"#D9D9D9\",\n    fontWeight: \"bold\"\n  },\n  buttonContent: {\n    display: \"flex\",\n    alignItems: \"center\",\n    backgroundColor: \"#3C3C3C\",\n    borderRadius: 10,\n    marginHorizontal: \"10%\",\n    marginVertical: 40\n  }\n});","map":{"version":3,"names":["MenuRetornar","useState","useEffect","get","create","update","useNavigation","Picker","jsx","_jsx","jsxs","_jsxs","CadastroRespVeiculo","_ref","route","previousData","params","codVeic","type","_useState","CodResp","_useState2","_slicedToArray","resp","setResp","_useState3","_useState4","respData","setRespData","navigation","fetchResp","_ref2","_asyncToGenerator","response","data","apply","arguments","submit","_ref3","codResp","CodRV","Alert","alert","navigate","table","error","console","log","status","View","style","styles","container","children","options","title","Nome","voltar","ScrollView","content","Text","titleinput","input","selectedValue","onValueChange","itemValue","Item","label","value","enabled","map","item","index","TouchableOpacity","buttonContent","onPress","buttonText","StyleSheet","backgroundColor","height","display","justifyContent","marginTop","borderRadius","width","alignSelf","margin","paddingLeft","elevation","shadowColor","marginLeft","color","fontSize","fontWeight","alignItems","marginHorizontal","marginVertical"],"sources":["C:/Users/victo/Desktop/rotas-tcc/screens/veiculo/cadastroRespVeiculo.js"],"sourcesContent":["import { View, Text, TouchableOpacity, StyleSheet, ScrollView, Alert } from \"react-native\";\r\nimport MenuRetornar from \"../../components/menuretornar\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { get } from \"../../services/api\";\r\nimport { create, update } from \"../../services/api\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { Picker } from '@react-native-picker/picker';\r\n\r\nexport default function CadastroRespVeiculo({route}){\r\n    const previousData = route.params.previousData\r\n    const codVeic = route.params.codVeic\r\n    const type = route.params.type\r\n\r\n    const [resp, setResp] = useState(type === \"update\" ? previousData.CodResp : \"\")\r\n    const [respData, setRespData] = useState([])\r\n\r\n    const navigation = useNavigation()\r\n\r\n    const fetchResp = async () => {\r\n        const response = await get(\"responsaveis\")\r\n        setRespData(response.data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchResp()\r\n    }, [])\r\n\r\n    const submit = async () => {\r\n        if(resp){\r\n            const data = {\r\n                codResp: resp,\r\n                codVeic: codVeic\r\n            }\r\n\r\n            try {\r\n                if (type === \"update\"){\r\n                    await update(\"responsavelVeiculo\", previousData.CodRV, data)\r\n                    Alert.alert(\"Sucesso\", \"Responsável atualizado com sucesso!\")\r\n                    navigation.navigate(\"ListaRespVeiculo\", {table: \"responsavelVeiculo\", codVeic: codVeic})\r\n                }\r\n                else{\r\n                    await create(\"responsavelVeiculo\", data)\r\n                    Alert.alert(\"Sucesso\", \"Responsável cadastrado com sucesso!\")\r\n                    navigation.navigate(\"ListaRespVeiculo\", {table: \"responsavelVeiculo\", codVeic: codVeic})\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n                const status = error.response ? error.response.status : 500\r\n\r\n                if (status === 402){\r\n                    Alert.alert(\"Erro\", \"Responsável já cadastrado\")\r\n                }\r\n                else if(status == 404){\r\n                    Alert.alert(\"Erro\", \"Responsável não encontrado\")\r\n                }\r\n                else{\r\n                    Alert.alert(\"Erro\", \"Ocorreu um erro ao enviar os dados, tente novamente.\")\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            Alert.alert(\"Erro\", \"Preencha todos os campos de texto.\")\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <View style={styles.container}>\r\n            <MenuRetornar options={[{ title: type === \"update\" ? `Editar ${previousData.Nome}` : \"Cadastro de Responsável de Veículo\", voltar: \"ListaResponsavelVeiculo\", table: \"responsavelVeiculo\", codVeic: codVeic}]} />\r\n            <ScrollView style={styles.content}>\r\n\r\n                <Text style={styles.titleinput}>Responsável</Text>\r\n                <Picker\r\n                    style={styles.input}\r\n                    selectedValue={resp}\r\n                    onValueChange={(itemValue) =>\r\n                        setResp(itemValue)\r\n                    }>\r\n                    <Picker.Item label=\"Selecione\" value=\"\" enabled={false}/>\r\n                    {\r\n                        respData.map((item, index) => {\r\n                            return (\r\n                                <Picker.Item\r\n                                key={index}\r\n                                label={`${item.Nome}`}\r\n                                value={item.CodResp}\r\n                                />\r\n                            );\r\n                        })\r\n                    }\r\n                </Picker>\r\n\r\n                <TouchableOpacity style={styles.buttonContent} onPress={() => submit()}>\r\n                    <Text style={styles.buttonText}>{type === \"update\" ? \"Atualizar\": 'Cadastrar'}</Text>\r\n                </TouchableOpacity>\r\n            </ScrollView>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: '#D9D9D9',\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: \"center\",\r\n    },\r\n    content:{\r\n        marginTop: 20\r\n    },\r\n    input: {\r\n        backgroundColor: 'white',\r\n        borderRadius: 20,\r\n        width: '80%',\r\n        height: 35,\r\n        alignSelf: 'center',\r\n        margin: 10,\r\n        paddingLeft:15,\r\n        elevation: 5,\r\n        shadowColor: '#3C3C3C'\r\n    },\r\n\r\n    titleinput: {\r\n        display: \"flex\",\r\n        marginLeft: 40,\r\n        color: \"#3C3C3C\",\r\n        fontSize: 16,\r\n        fontWeight: \"bold\"\r\n    },\r\n\r\n    buttonText: {\r\n        margin: 10,\r\n        fontSize: 20,\r\n        color: \"#D9D9D9\",\r\n        fontWeight: \"bold\"\r\n    },\r\n\r\n    buttonContent: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#3C3C3C\",\r\n        borderRadius: 10,\r\n        marginHorizontal: \"10%\",\r\n        marginVertical: 40\r\n    }\r\n\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}